name: phpunit-database

on:
  workflow_call:
    inputs:
      composer-command:
        description: Composer command to run.
        default: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
        required: false
        type: string
      composer-version:
        description: Composer version to use.
        default:
        required: false
        type: string
      concurrency-group:
        description: Concurrency group name.
        default: ${{ github.workflow }}-${{ github.ref }}
        required: false
        type: string
      coverage:
        description: Enable code coverage report (true/false).
        default: true
        required: false
        type: boolean
      coverage-driver:
        description: Code coverage driver to use (pcov, xdebug).
        default: pcov
        required: false
        type: string
      coverage-file:
        description: Coverage output file name.
        default: coverage.xml
        required: false
        type: string
      coverage-format:
        description: Coverage report format (clover, html, xml).
        default: clover
        required: false
        type: string
      database-env:
        description: Database environment variables (JSON).
        default: "{}"
        required: false
        type: string
      database-health-cmd:
        description: Database health check command.
        required: true
        type: string
      database-health-retries:
        description: Database health check retries.
        default: 5
        required: false
        type: string
      database-image:
        description: Docker image for database.
        required: true
        type: string
      database-port:
        description: Database port.
        required: true
        type: string
      database-type:
        description: Database type (mysql, pgsql, mssql, oracle).
        required: true
        type: string
      database-versions:
        description: Database versions to test.
        default: '["latest"]'
        required: false
        type: string
      debug:
        description: Display warnings in phpunit.
        default:
        required: false
        type: string
      enable-concurrency:
        description: Enable concurrency.
        default: true
        required: false
        type: boolean
      extensions:
        description: List of extensions to PHP.
        default:
        required: false
        type: string
      os:
        description: Operating systems to test, separated by comma.
        default: '["ubuntu-latest","windows-latest"]'
        required: false
        type: string
      phpunit-configuration:
        description: PHPUnit configuration file.
        default: ""
        required: false
        type: string
      phpunit-debug:
        description: Display warnings in phpunit.
        default: ""
        required: false
        type: string
      phpunit-exclude-group:
        description: Exclude group from phpunit.
        default:
        required: false
        type: string
      phpunit-group:
        description: Include specific group in phpunit.
        default:
        required: false
        type: string
      phpunit-path:
        description: Path to PHPUnit executable.
        default: vendor/bin/phpunit
        required: false
        type: string
      phpunit-test-suite:
        description: Specific test suite to run.
        default: ""
        required: false
        type: string
      php-ini-values:
        description: Initial values for PHP configuration.
        default: date.timezone='UTC'
        required: false
        type: string
      php-version:
        description: PHP versions to test, separated by comma.
        default: '["8.1","8.2","8.3","8.4"]'
        required: false
        type: string
      setup-commands:
        description: Additional setup commands after database starts.
        default: ""
        required: false
        type: string
      tools:
        description: Tools to test, separated by comma.
        default:
        required: false
        type: string

    secrets:
      AUTH_TOKEN:
        description: GitHub token for composer.
        required: false
      CODECOV_TOKEN:
        description: Codecov token.
        required: false

jobs:
  database:
    name: PHP ${{ matrix.php-version }}-${{ inputs.database-type }}-${{ matrix.database-version }}

    concurrency:
      group: ${{ matrix.os }}-${{ matrix.php-version }}-${{ inputs.database-type }}-${{ matrix.database-version }}-${{ inputs.concurrency-group }}
      cancel-in-progress: ${{ inputs.enable-concurrency }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
        php-version: ${{ fromJson(inputs.php-version) }}
        database-version: ${{ fromJson(inputs.database-versions) }}

    services:
      database:
        image: ${{ format('{0}:{1}', inputs.database-image, matrix.database-version) }}
        ports:
          - ${{ format('{0}:{0}', inputs.database-port) }}
        env: ${{ fromJson(inputs.database-env) }}
        options: >-
          --name=database
          --health-cmd="${{ inputs.database-health-cmd }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=${{ inputs.database-health-retries }}

    steps:
      - name: Checkout.
        uses: actions/checkout@v4

      - name: Additional Database Setup.
        if: inputs.setup-commands != ''
        run: ${{ inputs.setup-commands }}

      - name: Setup PHP Environment.
        uses: php-forge/actions/actions/php-setup@main
        with:
          auth-token: ${{ secrets.AUTH_TOKEN }}
          composer-command: ${{ inputs.composer-command }}
          composer-version: ${{ inputs.composer-version }}
          coverage-driver: ${{ inputs.coverage-driver }}
          extensions: ${{ inputs.extensions }}
          ini-values: ${{ inputs.php-ini-values }}
          php-version: ${{ matrix.php-version }}
          tools: ${{ inputs.tools }}

      - name: Run PHPUnit tests with coverage.
        uses: php-forge/actions/actions/phpunit@main
        with:
          configuration: ${{ inputs.phpunit-configuration }}
          coverage-file: ${{ inputs.coverage-file }}
          coverage-format: ${{ inputs.coverage-format }}
          coverage-token: ${{ secrets.CODECOV_TOKEN }}
          coverage: ${{ inputs.coverage }}
          debug: ${{ inputs.phpunit-debug }}
          exclude-group: ${{ inputs.phpunit-exclude-group }}
          group: ${{ inputs.phpunit-group }}
          path: ${{ inputs.phpunit-path }}
          test-suite: ${{ inputs.phpunit-test-suite }}
