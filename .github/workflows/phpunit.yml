name: phpunit

on:
  workflow_call:
    inputs:
      cancel-in-progress:
        description: Cancel in progress jobs.
        default: true
        required: false
        type: boolean
      concurrency-group:
        description: Concurrency group for the workflow.
        default: ${{ github.workflow }}-${{ github.ref }}
        required: true
        type: string
      composer-command:
        description: Composer command to run.
        default: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
        required: false
        type: string
      composer-version:
        description: Composer version to use.
        default:
        required: false
        type: string
      coverage:
        description: Generate code coverage report.
        default: pcov
        required: false
        type: string
      extensions:
        description: List of extensions to PHP.
        default:
        required: false
        type: string
      exclude-group-phpunit:
        description: Exclude group from phpunit.
        default:
        required: false
        type: string
      ini-values:
        description: Initial values for PHP configuration.
        default: date.timezone='UTC'
        required: false
        type: string
      os:
        description: Os to test, separated by comma.
        required: true
        type: string
      php:
        description: PHP versions to test, separated by comma.
        required: true
        type: string
      tools:
        description: Tools to test, separated by comma.
        default: composer:v2
        required: false
        type: string

    secrets:
      AUTH_TOKEN:
        description: GitHub token for composer.
        required: false
      CODECOV_TOKEN:
        description: Codecov token.
        required: false

jobs:
  phpunit:
    name: PHP ${{ matrix.php }}-${{ matrix.os }}

    concurrency:
      group: ${{ inputs.concurrency-group }}
      cancel-in-progress: ${{ inputs.cancel-in-progress }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
        php: ${{ fromJson(inputs.php) }}

    steps:
      - name: Checkout.
        uses: actions/checkout@v4

      - name: Install PHP.
        uses: shivammathur/setup-php@main
        with:
          coverage: ${{ inputs.coverage }}
          extensions: ${{ inputs.extensions}}
          ini-values: ${{ inputs.ini-values }}
          php-version: ${{ matrix.php }}
          tools: ${{ inputs.tools }}

      - name: Update composer.
        run: composer self-update ${{ inputs.composer-version }}

      - name: Configure composer linux.
        if: matrix.os == 'ubuntu-latest'
        run: |
          if [ "${{ secrets.AUTH_TOKEN }}" != '' ]; then
            composer config -g github-oauth.github.com ${{ secrets.AUTH_TOKEN }};
          fi

      - name: Configure composer windows.
        if: matrix.os == 'windows-latest'
        run: |
          if ($env:AUTH_TOKEN -ne '') {
            composer config -g github-oauth.github.com $env:AUTH_TOKEN
          }
        env:
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}

      - name: Install dependencies with composer.
        run: ${{ inputs.composer-command }}

      - name: Run tests with phpunit and generate coverage.
        run: vendor/bin/phpunit --coverage-clover=coverage.xml --colors=always --exclude-group ${{ inputs.exclude-group-phpunit }}

      - name: Upload coverage to Codecov.
        if: matrix.os == 'ubuntu-latest' && matrix.php == '8.1'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
