---
name: linter

on:
  workflow_call:
    inputs:
      checkout_fetch_depth:
        description: Fetch depth for checkout action.
        default: 0
        required: false
        type: number
      concurrency-group:
        description: Concurrency group name.
        default: linter/${{ github.workflow }}-${{ github.ref }}
        required: false
        type: string
      enable-concurrency:
        description: Enable concurrency.
        default: true
        required: false
        type: boolean
      linter-version:
        description: Super linter version.
        default: v8.1.0
        required: false
        type: string
      os:
        description: Os to test, as a JSON array string ('["ubuntu-latest"]').
        default: '["ubuntu-latest"]'
        required: false
        type: string

    secrets:
      GITHUB_TOKEN:
        description: GitHub token for Super Linter.
        required: true

jobs:
  lint:
    name: Super Linter

    concurrency:
      cancel-in-progress: ${{ inputs.enable-concurrency }}
      group: ${{ inputs.concurrency-group }}

    runs-on: ${{ fromJSON(inputs.os) }}

    permissions:
      checks: write
      contents: read
      statuses: write

    steps:
      - name: Checkout.
        uses: actions/checkout@v5
        with:
          fetch-depth: ${{ inputs.checkout_fetch_depth }}

      - name: Cache docker layers.
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v3

      - name: Pull linter image.
        run: docker pull ghcr.io/super-linter/super-linter:slim-${{ inputs.linter-version }}

      - name: Run super linter.
        uses: super-linter/super-linter/slim-${{ inputs.linter-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_CHECKOV: ${{ env.VALIDATE_CHECKOV || 'false' }}
          VALIDATE_ENV: ${{ env.VALIDATE_ENV || 'false' }}
          VALIDATE_GIT_MERGE_CONFLICT_MARKERS: >-
            ${{ env.VALIDATE_GIT_MERGE_CONFLICT_MARKERS || 'false' }}
          VALIDATE_GITHUB_ACTIONS_ZIZMOR: >-
            ${{ env.VALIDATE_GITHUB_ACTIONS_ZIZMOR || 'false' }}
          VALIDATE_JSCPD: ${{ env.VALIDATE_JSCPD || 'false' }}
          VALIDATE_TRIVY: ${{ env.VALIDATE_TRIVY || 'false' }}
